% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_overture.R
\name{as_overture}
\alias{as_overture}
\title{Convert a tbl_sql object to a tbl_overture object}
\usage{
as_overture(x)
}
\arguments{
\item{x}{A tbl_sql object representing an Overture Maps dataset.}
}
\value{
A tbl_sql object with the additional class tbl_overture and
attributes overture_type and overture_theme.
}
\description{
This function adds the tbl_overture class to a tbl_sql object and sets
attributes specific to Overture Maps data. It is primarily used internally
by the open_curtain() function but can also be used directly on tbl_sql
objects representing Overture Maps data.
}
\details{
The function adds the tbl_overture class as the first class of the object,
allowing for potential method dispatch specific to Overture Maps data.
It also adds two attributes:
\itemize{
\item overture_type: The type of Overture Maps data (e.g., "building", "place")
\item overture_theme: The theme of the Overture Maps data (e.g., "buildings", "places")
}
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
conn <- stage_conn()
division <- open_curtain("division", tablename = "test")

class(division)

# views
division2 <- tbl(conn, "test")
division2 <- as_overture(division2)

exit_stage(conn)

# The open_curtain() function already uses as_overture() internally,
# but you can also use it directly:
buildings_overture <- as_overture(buildings)
class(buildings_overture)  # Should include "tbl_overture"
\dontshow{\}) # examplesIf}
}
