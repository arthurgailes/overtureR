% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download.R
\name{download_overture}
\alias{download_overture}
\title{Download Overture Data to Local Directory}
\usage{
download_overture(
  output_dir,
  curtain_call = NULL,
  overwrite = FALSE,
  write_opts = NULL,
  ...
)
}
\arguments{
\item{output_dir}{The directory where the data will be saved.}

\item{curtain_call}{A overture_call object or NULL. If NULL,
'type' must be provided, and \code{open_curtain} will open a connection.}

\item{overwrite}{Logical, if FALSE, existing directories will not be
overwritten.}

\item{write_opts}{a character vector passed to DuckDB's copy See
\href{https://duckdb.org/docs/data/partitioning/partitioned_writes}{DuckDB documentation on partitioned writes}}

\item{...}{
  Arguments passed on to \code{\link[=open_curtain]{open_curtain}}
  \describe{
    \item{\code{type}}{A string specifying the type of overture dataset to read.
Setting to "*" or \code{NULL} will read all types for a given theme.}
    \item{\code{spatial_filter}}{An object to spatially filter the result.}
    \item{\code{theme}}{Inferred from type by default. Must be set if type is "*" or NULL}
    \item{\code{conn}}{A connection to a duckdb database.}
    \item{\code{as_sf}}{If TRUE, return an sf dataframe}
    \item{\code{mode}}{Either "view" (default) or "table". If "table", will download the
dataset into memory.}
    \item{\code{tablename}}{The name of the table to create in the database.}
    \item{\code{read_opts}}{A named list of key-value pairs passed to
\href{https://duckdb.org/docs/data/parquet/overview.html#parameters}{DuckDB's read_parquet}}
    \item{\code{base_url}}{Allows user to download data from a different mirror, such
as a beta or alpha release.}
    \item{\code{bbox}}{alias for \code{spatial_filter}. may be deprecated in the future.}
  }}
}
\value{
Invisibly returns NULL.
}
\description{
This function downloads Overture Maps data to a local directory, maintaining
the same partition structure as in S3.
}
