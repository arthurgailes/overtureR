[{"path":[]},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to overtureR","title":"Contributing to overtureR","text":"outlines propose change overtureR. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to overtureR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to overtureR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to overtureR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"arthurgailes/overtureR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to overtureR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://arthurgailes.github.io/overtureR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to overtureR","text":"Please note overtureR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://arthurgailes.github.io/overtureR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 overtureR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://arthurgailes.github.io/overtureR/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with overtureR","title":"Getting help with overtureR","text":"Thanks using overtureR! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://arthurgailes.github.io/overtureR/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with overtureR","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://arthurgailes.github.io/overtureR/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with overtureR","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://arthurgailes.github.io/overtureR/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with overtureR","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://arthurgailes.github.io/overtureR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arthur Gailes. Author, maintainer, copyright holder.","code":""},{"path":"https://arthurgailes.github.io/overtureR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gailes (2024). overtureR: Load 'Overture' Datasets 'dbplyr' 'sf'-Ready Data Frames. R package version 0.2.1, https://arthurgailes.github.io/overtureR/, https://github.com/arthurgailes/overtureR.","code":"@Manual{,   title = {overtureR: Load 'Overture' Datasets as 'dbplyr' and 'sf'-Ready Data Frames},   author = {Arthur Gailes},   year = {2024},   note = {R package version 0.2.1, https://arthurgailes.github.io/overtureR/},   url = {https://github.com/arthurgailes/overtureR}, }"},{"path":[]},{"path":"https://arthurgailes.github.io/overtureR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Load Overture Datasets as dbplyr and sf-Ready Data Frames","text":"","code":"install.packages(\"overtureR\")  # devtools::install_github(\"arthurgailes/overtureR\")"},{"path":"https://arthurgailes.github.io/overtureR/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Load Overture Datasets as dbplyr and sf-Ready Data Frames","text":"Query global Overture Maps data directly R Conduct analysis massive dataset without loading memory using dbplyr’s lazy evaluation Seamless dplyr sf integration Merge local sf data within duckdb sf Local downloading offline use perforamnce","code":""},{"path":"https://arthurgailes.github.io/overtureR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Load Overture Datasets as dbplyr and sf-Ready Data Frames","text":"Replicating duckdb examples fromm Overture docs","code":"library(overtureR) library(dplyr) library(ggplot2)  counties <- open_curtain(\"division_area\") |>   # in R, filtering on variables must come before removing them via select   filter(subtype == \"county\" & country == \"US\" & region == \"US-PA\") |>   transmute(     id,     division_id,     primary = names$primary,     geometry   ) |>   collect()  # Plot the results ggplot(counties) +   geom_sf(aes(fill = as.numeric(sf::st_area(geometry))), color = \"white\", size = 0.2) +   viridis::scale_fill_viridis(option = \"plasma\", guide = FALSE) +   labs(     title = \"Pennsylvania Counties by Area\",     caption = \"Data: Overture Maps\"   ) library(overtureR) library(dplyr)  # lazily load the full `mountains` dataset mountains <- open_curtain(type = \"*\", theme = \"places\") |>   transmute(     id,     primary_name = names$primary,     x = bbox$xmin,     y = bbox$ymin,     main_category = categories$primary,     primary_source = sources[[1]]$dataset,     confidence,     geometry # currently no duckdb spatial implementation   ) |>   filter(main_category == \"mountain\" & confidence > .90)  head(mountains) #> # Source:   SQL [6 x 8] #> # Database: DuckDB v1.0.0 [Arthur.Gailes@Windows 10 x64:R 4.2.1/:memory:] #>   id            primary_name     x     y main_category primary_source confidence #>   <chr>         <chr>        <dbl> <dbl> <chr>         <chr>               <dbl> #> 1 08f464e0e312… Kawaikini    -159.  22.1 mountain      meta                0.954 #> 2 08f464e3b1a2… Kalepa       -159.  22.0 mountain      meta                0.938 #> 3 08f464e05984… Sleeping Gi… -159.  22.1 mountain      meta                0.945 #> 4 08f464e3a4d0… Nounou-East… -159.  22.1 mountain      meta                0.945 #> 5 08f464e05514… Makaleha Mo… -159.  22.1 mountain      meta                0.965 #> 6 08f464e03538… Makana       -160.  22.2 mountain      meta                0.938 #> # ℹ 1 more variable: geometry <POINT [°]>"},{"path":"https://arthurgailes.github.io/overtureR/index.html","id":"downloading-data-locally","dir":"","previous_headings":"","what":"Downloading data locally","title":"Load Overture Datasets as dbplyr and sf-Ready Data Frames","text":"record_overture function allows download Overture Maps data local directory, maintaining partition structure S3. useful offline analysis need work data repeatedly. ’s example:","code":"library(overtureR) library(ggplot2) library(dplyr) library(rayshader)  # Define a bounding box for New York City broadway <- c(xmin = -73.9901, ymin = 40.755488, xmax = -73.98, ymax = 40.76206)  # Download building data for NYC to a local directory local_buildings <- open_curtain(\"building\", broadway) |>    record_overture(output_dir = tempdir(), overwrite = TRUE)  # The downloaded data is returned as a `dbplyr` object, same as the original (but faster!) broadway_buildings <- local_buildings |>    filter(!is.na(height)) |>    mutate(height = round(height)) |>    collect()   p <- ggplot(broadway_buildings) +   geom_sf(aes(fill = height)) +   scale_fill_distiller(palette = \"Oranges\", direction = 1) +   # guides(fill = FALSE) +   labs(title = \"Buildings on Broadway\", caption = \"Data: Overture Maps\", fill = \"\")  # Convert to 3D and render plot_gg(   p,   multicore = TRUE,   width = 6, height = 5, scale = 250,   windowsize = c(1032, 860),   zoom = 0.55,    phi = 40, theta = 0,   solid = FALSE,   offset_edges = TRUE,   sunangle = 75 )  render_snapshot(clear=TRUE)"},{"path":"https://arthurgailes.github.io/overtureR/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Load Overture Datasets as dbplyr and sf-Ready Data Frames","text":"Read pmtiles Add partition, chunking record_overture Add beta/alpha datasets Add mapping vignette Add performance vignette","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/as_overture.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tbl_sql object to a overture_call object — as_overture","title":"Convert a tbl_sql object to a overture_call object — as_overture","text":"function adds overture_call class tbl_sql object.  primarily used internally#' open_curtain() function can also used directly tbl_sql #' objects representing Overture Maps data.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/as_overture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tbl_sql object to a overture_call object — as_overture","text":"","code":"as_overture(x, type, theme = get_theme_from_type(type))"},{"path":"https://arthurgailes.github.io/overtureR/reference/as_overture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tbl_sql object to a overture_call object — as_overture","text":"x tbl_sql object representing Overture Maps dataset. type string specifying type overture dataset read. Setting \"*\" NULL read types given theme. theme Inferred type default. Must set type \"*\" NULL","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/as_overture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a tbl_sql object to a overture_call object — as_overture","text":"tbl_sql object additional class overture_call attributes overture_type overture_theme.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/as_overture.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a tbl_sql object to a overture_call object — as_overture","text":"function adds overture_call class first class object","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/as_overture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tbl_sql object to a overture_call object — as_overture","text":"","code":"if (FALSE) { # interactive() # The open_curtain() function already uses as_overture() internally, # but you can also use it directly: conn <- stage_conn() division <- open_curtain(\"division\", tablename = \"test\")  class(division)  # views division2 <- tbl(conn, \"test\") division2 <- as_overture(division2)  exit_stage(conn) }"},{"path":"https://arthurgailes.github.io/overtureR/reference/collect.overture_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dbplyr table to sf Object — collect.overture_call","title":"Convert dbplyr table to sf Object — collect.overture_call","text":"Collects lazy dbplyr view materializes -memory sf table. collect_sf deprecated alias.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/collect.overture_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dbplyr table to sf Object — collect.overture_call","text":"","code":"# S3 method for class 'overture_call' collect(x, ..., geom_col = \"geometry\", crs = 4326)  collect_sf(...)"},{"path":"https://arthurgailes.github.io/overtureR/reference/collect.overture_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert dbplyr table to sf Object — collect.overture_call","text":"x lazy data frame backed database query. ... arguments passed dplyr::collect(). geom_col name geometry column. auto-detect names matching 'geom'. crs coordinate reference system use geometries, specified EPSG code. default 4326 (WGS 84).","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/collect.overture_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert dbplyr table to sf Object — collect.overture_call","text":"'sf' object dataset converted spatial features.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/collect.overture_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert dbplyr table to sf Object — collect.overture_call","text":"","code":"if (FALSE) { # interactive()  bbox <- c(xmin = -120.5, ymin = 35.5, xmax = -120.0, ymax = 36.0) lazy_tbl <- open_curtain(\"building\", bbox) collect(lazy_tbl) }"},{"path":"https://arthurgailes.github.io/overtureR/reference/config_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check duckdb extension and config settings — config_extensions","title":"Check duckdb extension and config settings — config_extensions","text":"Check duckdb extension config settings","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/config_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check duckdb extension and config settings — config_extensions","text":"","code":"config_extensions(conn)"},{"path":"https://arthurgailes.github.io/overtureR/reference/config_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check duckdb extension and config settings — config_extensions","text":"conn connection duckdb database.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/open_curtain.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve (Spatially Filtered) Overture Datasets — open_curtain","title":"Retrieve (Spatially Filtered) Overture Datasets — open_curtain","text":"Fetches overture data AWS. bounding box provided, applies spatial filtering include records within area. core code copied duckdbfs, deserves credit implementation","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/open_curtain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve (Spatially Filtered) Overture Datasets — open_curtain","text":"","code":"open_curtain(   type,   spatial_filter = NULL,   theme = get_theme_from_type(type),   conn = NULL,   as_sf = FALSE,   mode = \"view\",   tablename = NULL,   read_opts = list(),   base_url = \"s3://overturemaps-us-west-2/release/2024-07-22.0\",   bbox = NULL )"},{"path":"https://arthurgailes.github.io/overtureR/reference/open_curtain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve (Spatially Filtered) Overture Datasets — open_curtain","text":"type string specifying type overture dataset read. Setting \"*\" NULL read types given theme. spatial_filter object spatially filter result. theme Inferred type default. Must set type \"*\" NULL conn connection duckdb database. as_sf TRUE, return sf dataframe mode Either \"view\" (default) \"table\". \"table\", download dataset memory. tablename name table create database. read_opts named list key-value pairs passed DuckDB's read_parquet base_url Allows user download data different mirror, beta alpha release. bbox alias spatial_filter. may deprecated future.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/open_curtain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve (Spatially Filtered) Overture Datasets — open_curtain","text":"dbplyr lazy dataframe, sf dataframe as_sf TRUE","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/open_curtain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve (Spatially Filtered) Overture Datasets — open_curtain","text":"","code":"if (FALSE) { # interactive() bbox <- c(xmin = -120.5, ymin = 35.5, xmax = -120.0, ymax = 36.0) open_curtain(\"building\", bbox) }"},{"path":"https://arthurgailes.github.io/overtureR/reference/record_overture.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Overture Maps Data to Local Directory — record_overture","title":"Download Overture Maps Data to Local Directory — record_overture","text":"function downloads Overture Maps data local directory, maintaining partition structure S3. snapshot_overture defaults 'output_dir' tempdir() overwrite TRUE.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/record_overture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Overture Maps Data to Local Directory — record_overture","text":"","code":"record_overture(curtain_call, output_dir, overwrite = FALSE, write_opts = NULL)  snapshot_overture(   curtain_call,   output_dir = tempdir(),   overwrite = TRUE,   write_opts = NULL )"},{"path":"https://arthurgailes.github.io/overtureR/reference/record_overture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Overture Maps Data to Local Directory — record_overture","text":"curtain_call overture_call object. output_dir directory data saved. overwrite Logical, FALSE (default), existing directories overwritten. write_opts character vector passed DuckDB's COPY command.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/record_overture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Overture Maps Data to Local Directory — record_overture","text":"Another tbl_lazy. Use dplyr::show_query() see generated query, use dplyr::collect() execute query return data R. 'overture_call' downloaded data","code":""},{"path":[]},{"path":"https://arthurgailes.github.io/overtureR/reference/record_overture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Overture Maps Data to Local Directory — record_overture","text":"","code":"if (FALSE) { # interactive() broadway <- c(xmin = -73.99, ymin = 40.76, xmax = -73.98, ymax = 40.76) buildings <- open_curtain(\"building\", spatial_filter = bbox) local_buildings <- record_overture(buildings, tempdir(), overwrite = TRUE) }"},{"path":"https://arthurgailes.github.io/overtureR/reference/sf_as_dbplyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","title":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","text":"thin wrapper around duckdb::duckdb_register() creates virtual table, selects geometry column DuckDB.'s GEOMETRY type returned dbplyr representation. Mostly useful join spatial operations within DuckDB. data copied.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/sf_as_dbplyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","text":"","code":"sf_as_dbplyr(   conn,   name,   sf_obj,   geom_only = isFALSE(inherits(sf_obj, \"sf\")),   overwrite = FALSE,   ... )"},{"path":"https://arthurgailes.github.io/overtureR/reference/sf_as_dbplyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","text":"conn DuckDB connection, created dbConnect(). name name virtual table registered unregistered sf_obj sf object registered duckdb geom_only TRUE, geometry column registered. Always FALSE sfc sfg objects overwrite existing registration overwritten? ... additional arguments passed duckdb_register","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/sf_as_dbplyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","text":"dbplyr lazy table","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/sf_as_dbplyr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","text":"Behind scenes, function creates initial view (name_init) geometry stored text via sf::st_as_text. creates view name replaces geometry column DuckDB's internal geometry type.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/sf_as_dbplyr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Registeran sf object as a DuckDB virtual table — sf_as_dbplyr","text":"","code":"if (FALSE) { # interactive() library(sf)  con <- stage_conn() sf_obj <- st_sf(a = 3, geometry = st_sfc(st_point(1:2))) sf_as_dbplyr(con, \"test\", sf_obj)  DBI::dbDisconnect(con) }"},{"path":"https://arthurgailes.github.io/overtureR/reference/stage_conn.html","id":null,"dir":"Reference","previous_headings":"","what":"create a cachable duckdb connection. In dev — stage_conn","title":"create a cachable duckdb connection. In dev — stage_conn","text":"stage_conn primarily intended internal use overtureR functions.  However, can called directly user whenever desirable direct access connection object. core code copied duckdbfs, deserves credit implementation","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/stage_conn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a cachable duckdb connection. In dev — stage_conn","text":"","code":"stage_conn(   dbdir = \":memory:\",   read_only = FALSE,   bigint = \"numeric\",   config = list(),   ... )  strike_stage(conn = stage_conn())"},{"path":"https://arthurgailes.github.io/overtureR/reference/stage_conn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a cachable duckdb connection. In dev — stage_conn","text":"dbdir Location database files. path existing directory file system. default (\"\"), data kept RAM. read_only Set TRUE read-operation. file-based databases, applied database file opened first time. Subsequent connections (via drv object drv object pointing path) silently ignore flag. bigint 64-bit integers returned. two options: \"numeric\" \"integer64\". \"numeric\" selected, bigint integers treated double/numeric. \"integer64\" selected, bigint integers set bit64 encoding. config Named list DuckDB configuration flags, see https://duckdb.org/docs/configuration/overview#configuration-reference possible options. flags applied database object instantiated. Subsequent connections silently ignore flags. ... arguments passed DBI::dbConnect conn duckdb_connection object","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/stage_conn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a cachable duckdb connection. In dev — stage_conn","text":"duckdb::duckdb()connection object","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/stage_conn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create a cachable duckdb connection. In dev — stage_conn","text":"first called (user internal function), function creates duckdb connection places connection cache (overturer_conn option). subsequent calls, function returns cached connection, rather recreating fresh connection. frees user responsibility managing connection object, functions needing access connection can use create access existing connection. close global environment, function's finalizer gracefully shutdown connection removing cache. strike_stage closes connection.","code":""},{"path":"https://arthurgailes.github.io/overtureR/reference/stage_conn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create a cachable duckdb connection. In dev — stage_conn","text":"","code":"con <- stage_conn() strike_stage(con)"},{"path":"https://arthurgailes.github.io/overtureR/news/index.html","id":"overturer-020","dir":"Changelog","previous_headings":"","what":"overtureR 0.2.0","title":"overtureR 0.2.0","text":"Add support downloading Overture Maps data via record_overture snapshot_overture. functions return lazy ‘overture_call’ dataframe linked new local dataset. second parameter open_curtain changed ‘bbox’ ‘spatial_filter’, allows bounding boxes (named vector class ‘bbox’), ‘sf’ objects, another dbplyr dataframe (e.g. different overtureR dataset/table. latter two cases, data first filtered bounding box spatial_filter, geographically necessary. Filtering currently intersection. open_curtain parameter ‘bbox’ deprecated, likely removed future release. Class ‘overture_call’ added facilitate collect calls directly sf objects. collect_sf now deprecated, use collect.","code":""},{"path":"https://arthurgailes.github.io/overtureR/news/index.html","id":"overturer-010","dir":"Changelog","previous_headings":"","what":"overtureR 0.1.0","title":"overtureR 0.1.0","text":"CRAN release: 2024-08-01 Initial CRAN submission","code":""}]
